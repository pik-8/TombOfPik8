@startuml

title __FIGHTING's Class Diagram__\n

  package model.fighting {
    class Attack {
        - name : String
        - description : String
        - damage : int
        - magicDamage : int
        - accuracy : int
        - requiredSlots : int
        - cooldown : int
        + Attack()
        - checkParams()
        + getName()
        + setName()
        + getDescription()
        + setDescription()
        + getDamage()
        + getMagicDamage()
        + getAccuracy()
        + getEffect()
        + getRequiredSlots()
        + getAttackPattern()
        + toString()
    }
  }
  

  package model.fighting {
    class AttackPattern {
        - attackField : float[][]
        - effectField : Effect[][]
        + AttackPattern()
        - checkAttackField()
        - checkEffectField()
        + getAttackerLocationAttackField()
        + getAttackerLocationEffectField()
        + getAttackField()
        + getEffectField()
        + toString()
    }
  }
  

  package model.fighting {
    class DivineHealSkill {
        # DivineHealSkill()
        + checkIfReady()
    }
  }
  

  package model.fighting {
    abstract class Skill {
        - ready : boolean
        # Skill()
        {abstract} + checkIfReady()
    }
  }
  

  package model.fighting {
    class SkillFactory {
        - SkillFactory()
        {static} + getSkill()
    }
  }
  

  package model.fighting {
    enum SkillList {
      DIVINE_HEAL
    }
  }
  

  Attack o-- Effect : effect
  Attack o-- AttackPattern : attackPattern
  DivineHealSkill -up-|> Skill
  Skill -up-|> Attack


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
