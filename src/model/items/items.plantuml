@startuml

title __ITEMS's Class Diagram__\n

  package model.items {
    class Armor {
        + Armor()
        + Armor()
        + Armor()
        + getSlot()
    }
  }
  

  package model.items {
    class ArmorFactory {
        + ArmorFactory()
        # readTemplates()
        # generateItemArray()
        + generateRandomArmor()
        + generateRandomArmor()
        + generateRandomItem()
        + generateCommonArmor()
        + generateRareArmor()
        + generateEpicArmor()
        + generateLegendaryArmor()
    }
  }
  

  package model.items {
    enum ArmorSlot {
      HEAD
      CHEST
      LEGS
    }
  }
  

  package model.items {
    class Consumable {
        - init()
        + Consumable()
        + Consumable()
        + Consumable()
    }
  }
  

  package model.items {
    enum CraftingMaterial {
      CLOTH
      LEATHER
      IVORY
      MAGIC_DUST
      description
    }
  }
  

  package model.items {
    abstract class Equipment {
        - init()
        + Equipment()
        + Equipment()
        + Equipment()
        + getSecondaryStats()
        + setSecondaryStats()
    }
  }
  

  package model.items {
    class InventoryFullException {
        + getMessage()
    }
  }
  

  package model.items {
    abstract class Item {
        # name : String
        # description : String
        # effects : ArrayList<Effect>
        + getName()
        + getDescription()
        + getEffects()
        + addEffect()
        + removeEffect()
        + removeAllEffects()
        + getRarity()
        + setRarity()
    }
  }
  

  package model.items {
    abstract class ItemFactory {
        # common : ArrayList<Item>
        # rare : ArrayList<Item>
        # epic : ArrayList<Item>
        # legendary : ArrayList<Item>
        # builder : GsonBuilder
        # gson : Gson
        # rand : Random
        # init()
        # pickRandomItem()
        {abstract} # readTemplates()
        {abstract} # generateItemArray()
        {abstract} + generateRandomItem()
    }
  }
  

  package model.items {
    enum Rarity {
      COMMON
      RARE
      EPIC
      LEGENDARY
    }
  }
  

  package model.items {
    class Trinket {
        + Trinket()
        + Trinket()
        + Trinket()
        + getPrimeStats()
        + setPrimeStats()
    }
  }
  

  package model.items {
    class TrinketFactory {
        + TrinketFactory()
        # readTemplates()
        # generateItemArray()
        + generateRandomTrinket()
        + generateRandomTrinket()
        + generateRandomItem()
        - generateCommonTrinket()
        - generateRareTrinket()
        - generateEpicTrinket()
        - generateLegendaryTrinket()
    }
  }
  

  package model.items {
    class Weapon {
        # onHitEffects : ArrayList<Effect>
        + getOnHitEffects()
        + setOnHitEffects()
        + Weapon()
        + Weapon()
        + Weapon()
    }
  }
  

  package model.items {
    class WeaponFactory {
        # readTemplates()
        # generateItemArray()
        + WeaponFactory()
        + generateRandomWeapon()
        + generateRandomWeapon()
        + generateRandomItem()
        + generateCommonWeapon()
        + generateRareWeapon()
        + generateEpicWeapon()
        + generateLegendaryWeapon()
    }
  }
  

  Armor -up-|> Equipment
  Armor o-- ArmorSlot : slot
  ArmorFactory -up-|> ItemFactory
  Consumable -up-|> Item
  Equipment -up-|> Item
  Equipment o-- SecondaryStats : secondaryStats
  Item o-- Rarity : rarity
  Trinket -up-|> Equipment
  Trinket o-- PrimeStats : primeStats
  TrinketFactory -up-|> ItemFactory
  Weapon -up-|> Equipment
  WeaponFactory -up-|> ItemFactory


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
