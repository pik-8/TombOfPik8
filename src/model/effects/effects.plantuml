@startuml

title __EFFECTS's Class Diagram__\n

  package model.effects {
    enum Condition {
      NONE
      POISON
      GREAT_HEAL
      SMALL_HEAL
      IRON_SKIN
      PARALYSIS
      CRUSHING
      GREAT_WALL
    }
  }
  

  package model.effects {
    class DamageEffect {
        - flatDamage : float
        - percentOfMaxHealthDamage : float
        - percentOfMissingHealthDamage : float
        - percentOfCurrentHealthDamage : float
        + DamageEffect()
        + DamageEffect()
        + DamageEffect()
        + applyEffect()
        + applyEffect()
        + applyEffect()
    }
  }
  

  package model.effects {
    abstract class Effect {
        - name : String
        - description : String
        - duration : int
        - instantApply : boolean
        - init()
        # Effect()
        # Effect()
        {abstract} + applyEffect()
        {abstract} + applyEffect()
        {abstract} + applyEffect()
        + getName()
        + setString()
        + getDescription()
        + setDescription()
        + getDuration()
        + isInstantApply()
        + setInstantApply()
        # setDuration()
        + toString()
    }
  }
  

  package model.effects {
    class EffectFactory {
        - EffectFactory()
        {static} + getEffect()
    }
  }
  

  package model.effects {
    class HealingEffect {
        - flatHeal : float
        - percentOfMaxHealthHeal : float
        - percentOfMissingHealthHeal : float
        - percentOfCurrentHealthHeal : float
        + HealingEffect()
        + HealingEffect()
        + HealingEffect()
        + applyEffect()
        + applyEffect()
        + applyEffect()
    }
  }
  

  package model.effects {
    class RootEffect {
        + RootEffect()
        + applyEffect()
        + applyEffect()
        + applyEffect()
    }
  }
  

  package model.effects {
    class SlowDownEffect {
        - flatSlowDown : float
        - percentOfSpeedSlowDown : float
        + SlowDownEffect()
        + SlowDownEffect()
        + applyEffect()
        + applyEffect()
        + applyEffect()
    }
  }
  

  DamageEffect -up-|> Effect
  HealingEffect -up-|> Effect
  RootEffect -up-|> Effect
  SlowDownEffect -up-|> Effect


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
