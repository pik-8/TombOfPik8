package constants;

public class PropertiesStats {

    //-----------HEALTH-----------HEALTH-----------HEALTH-----------HEALTH-----------HEALTH-----------HEALTH-----------HEALTH-----------HEALTH---------------

    public static int STARTVALUE_FOR_HP_NOT_SPEZIALISED = 80;
    public static int SOFTCAP_FOR_HP_NOT_SPEZIALISED_1 = 15;
    public static int SOFTCAP_FOR_HP_NOT_SPEZIALISED_2 = 25;
    public static int SCALE_1_FOR_HP_NOT_SPEZIALISED = 20;
    public static int SCALE_2_FOR_HP_NOT_SPEZIALISED = 15;
    public static int SCALE_3_FOR_HP_NOT_SPEZIALISED = 8;
    public static int MAX_VALUE_AFTER_SOFTCAP_1_HP_NOT_SPEZIALISED = (SOFTCAP_FOR_HP_NOT_SPEZIALISED_1 * SCALE_1_FOR_HP_NOT_SPEZIALISED) + STARTVALUE_FOR_HP_NOT_SPEZIALISED;
    public static int MAX_VALUE_AFTER_SOFTCAP_2_HP_NOT_SPEZIALISED = ((SOFTCAP_FOR_HP_NOT_SPEZIALISED_2 - SOFTCAP_FOR_HP_NOT_SPEZIALISED_1) * SCALE_2_FOR_HP_NOT_SPEZIALISED) + MAX_VALUE_AFTER_SOFTCAP_1_HP_NOT_SPEZIALISED;

    public static int[] HP_SCALES_NOT_SPEZIALISED = { SCALE_1_FOR_HP_NOT_SPEZIALISED, SCALE_2_FOR_HP_NOT_SPEZIALISED, SCALE_3_FOR_HP_NOT_SPEZIALISED };
    public static int[] HP_BASESTATS_NOT_SPEZIALISED = { STARTVALUE_FOR_HP_NOT_SPEZIALISED, MAX_VALUE_AFTER_SOFTCAP_1_HP_NOT_SPEZIALISED, MAX_VALUE_AFTER_SOFTCAP_2_HP_NOT_SPEZIALISED };

    public static int STARTVALUE_FOR_HP_SPEZIALISED = 90;
    public static int SOFTCAP_FOR_HP_SPEZIALISED_1 = 15;
    public static int SOFTCAP_FOR_HP_SPEZIALISED_2 = 30;
    public static int SCALE_1_FOR_HP_SPEZIALISED = 10;
    public static int SCALE_2_FOR_HP_SPEZIALISED = 12;
    public static int SCALE_3_FOR_HP_SPEZIALISED = 15;
    public static int MAX_VALUE_AFTER_SOFTCAP_1_HP_SPEZIALISED = (SOFTCAP_FOR_HP_SPEZIALISED_1 * SCALE_1_FOR_HP_SPEZIALISED) + STARTVALUE_FOR_HP_SPEZIALISED;
    public static int MAX_VALUE_AFTER_SOFTCAP_2_HP_SPEZIALISED = ((SOFTCAP_FOR_HP_SPEZIALISED_2 - SOFTCAP_FOR_HP_SPEZIALISED_1) * SCALE_2_FOR_HP_SPEZIALISED) + MAX_VALUE_AFTER_SOFTCAP_1_HP_SPEZIALISED;

    public static int[] HP_SCALES_SPEZIALISED = { SCALE_1_FOR_HP_SPEZIALISED, SCALE_2_FOR_HP_SPEZIALISED, SCALE_3_FOR_HP_SPEZIALISED };
    public static int[] HP_BASESTATS_SPEZIALISED = { STARTVALUE_FOR_HP_SPEZIALISED, MAX_VALUE_AFTER_SOFTCAP_1_HP_SPEZIALISED, MAX_VALUE_AFTER_SOFTCAP_2_HP_SPEZIALISED };

    //-----------MAX_STAMINA-----------MAX_STAMINA-----------MAX_STAMINA-----------MAX_STAMINA-----------MAX_STAMINA-----------MAX_STAMINA-----------MAX_STAMINA-----------MAX_STAMINA---------------

    public static int MAX_ACTION_STARTVALUE_NOT_SPEZIALISED = 17;
    public static int MAX_ACTION_SOFTCAP_NOT_SPEZIALISED_1 = 10;
    public static int MAX_ACTION_SOFTCAP_NOT_SPEZIALISED_2 = 25;
    public static int MAX_ACTION_SCALE_1_NOT_SPEZIALISED = 3;
    public static int MAX_ACTION_2_NOT_SPEZIALISED = 2;
    public static int MAX_ACTION_SCALE_3_NOT_SPEZIALISED = 1;
    public static int MAX_ACTION_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED = (MAX_ACTION_SOFTCAP_NOT_SPEZIALISED_1 * MAX_ACTION_SCALE_1_NOT_SPEZIALISED) + MAX_ACTION_STARTVALUE_NOT_SPEZIALISED;
    public static int MAX_ACTION_MAX_VALUE_AFTER_SOFTCAP_2_NOT_SPEZIALISED = ((MAX_ACTION_SOFTCAP_NOT_SPEZIALISED_2 - MAX_ACTION_SOFTCAP_NOT_SPEZIALISED_1) * MAX_ACTION_2_NOT_SPEZIALISED) + MAX_ACTION_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED;

    public static int MAX_ACTION_STARTVALUE_SPEZIALISED = 19;
    public static int MAX_ACTION_SOFTCAP_SPEZIALISED_1 = 15;
    public static int MAX_ACTION_SOFTCAP_SPEZIALISED_2 = 50;
    public static int MAX_ACTION_SCALE_1_SPEZIALISED = 1;
    public static int MAX_ACTION_SCALE_2_SPEZIALISED = 3;
    public static int MAX_ACTION_SCALE_3_SPEZIALISED = 2;
    public static int MAX_ACTION_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED = (MAX_ACTION_SOFTCAP_SPEZIALISED_1 * MAX_ACTION_SCALE_1_SPEZIALISED) + MAX_ACTION_STARTVALUE_SPEZIALISED;
    public static int MAX_ACTION_MAX_VALUE_AFTER_SOFTCAP_2_SPEZIALISED = ((MAX_ACTION_SOFTCAP_SPEZIALISED_2 - MAX_ACTION_SOFTCAP_SPEZIALISED_1) * MAX_ACTION_SCALE_2_SPEZIALISED) + MAX_ACTION_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED;


    //-----------ATTACK_RESISTANCE_FOR_TOUGHNESS-----------ATTACK_RESISTANCE_FOR_TOUGHNESS-----------ATTACK_RESISTANCE_FOR_TOUGHNESS-----------ATTACK_RESISTANCE_FOR_TOUGHNESS-----------ATTACK_RESISTANCE_FOR_TOUGHNESS-----------ATTACK_RESISTANCE_FOR_TOUGHNESS-----------ATTACK_RESISTANCE_FOR_TOUGHNESS-----------ATTACK_RESISTANCE_FOR_TOUGHNESS---------------

    public static int ATTACK_RESISTANCE_STARTVALUE_NOT_SPEZIALISED_FOR_TOUGHNESS = 1;
    public static int ATTACK_RESISTANCE_SOFTCAP_NOT_SPEZIALISED_1_FOR_TOUGHNESS = 10;
    public static int ATTACK_RESISTANCE_SOFTCAP_NOT_SPEZIALISED_2_FOR_TOUGHNESS = 25;
    public static float ATTACK_RESISTANCE_SCALE_1_NOT_SPEZIALISED_FOR_TOUGHNESS = 0.1f;
    public static float ATTACK_RESISTANCE_SCALE_2_NOT_SPEZIALISED_FOR_TOUGHNESS = 0.1f;
    public static float ATTACK_RESISTANCE_SCALE_3_NOT_SPEZIALISED_FOR_TOUGHNESS = 0.05f;
    public static int ATTACK_RESISTANCE_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_TOUGHNESS = Math.round(ATTACK_RESISTANCE_SOFTCAP_NOT_SPEZIALISED_1_FOR_TOUGHNESS * ATTACK_RESISTANCE_SCALE_1_NOT_SPEZIALISED_FOR_TOUGHNESS) + ATTACK_RESISTANCE_STARTVALUE_NOT_SPEZIALISED_FOR_TOUGHNESS;
    public static int ATTACK_RESISTANCE_MAX_VALUE_AFTER_SOFTCAP_2_NOT_SPEZIALISED_FOR_TOUGHNESS = Math.round((ATTACK_RESISTANCE_SOFTCAP_NOT_SPEZIALISED_2_FOR_TOUGHNESS - ATTACK_RESISTANCE_SOFTCAP_NOT_SPEZIALISED_1_FOR_TOUGHNESS) * ATTACK_RESISTANCE_SCALE_2_NOT_SPEZIALISED_FOR_TOUGHNESS) + ATTACK_RESISTANCE_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_TOUGHNESS;

    public static float[] STM_RESIS_SCALES_NOT_SPEZIALISED_FORTOUGHNESS = { ATTACK_RESISTANCE_SCALE_1_NOT_SPEZIALISED_FOR_TOUGHNESS, ATTACK_RESISTANCE_SCALE_2_NOT_SPEZIALISED_FOR_TOUGHNESS, ATTACK_RESISTANCE_SCALE_3_NOT_SPEZIALISED_FOR_TOUGHNESS };
    public static int[] STM_RESIS_BASESTATS_NOT_SPEZIALISED_FORTOUGHNESS = { ATTACK_RESISTANCE_STARTVALUE_NOT_SPEZIALISED_FOR_TOUGHNESS, ATTACK_RESISTANCE_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_TOUGHNESS, ATTACK_RESISTANCE_MAX_VALUE_AFTER_SOFTCAP_2_NOT_SPEZIALISED_FOR_TOUGHNESS };

    public static int ATTACK_RESISTANCE_STARTVALUE_SPEZIALISED_FOR_TOUGHNESS = 1;
    public static int ATTACK_RESISTANCE_SOFTCAP_SPEZIALISED_1_FOR_TOUGHNESS = 10;
    public static int ATTACK_RESISTANCE_SOFTCAP_SPEZIALISED_2_FOR_TOUGHNESS = 20;
    public static float ATTACK_RESISTANCE_SCALE_1_SPEZIALISED_FOR_TOUGHNESS = 0f;
    public static float ATTACK_RESISTANCE_SCALE_2_SPEZIALISED_FOR_TOUGHNESS = .1f;
    public static float ATTACK_RESISTANCE_SCALE_3_SPEZIALISED_FOR_TOUGHNESS = 0.2f;
    public static int ATTACK_RESISTANCE_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_TOUGHNESS = ATTACK_RESISTANCE_STARTVALUE_SPEZIALISED_FOR_TOUGHNESS;
    public static int ATTACK_RESISTANCE_MAX_VALUE_AFTER_SOFTCAP_2_HP_SPEZIALISED_FOR_TOUGHNESS = Math.round((ATTACK_RESISTANCE_SOFTCAP_SPEZIALISED_2_FOR_TOUGHNESS - ATTACK_RESISTANCE_SOFTCAP_SPEZIALISED_1_FOR_TOUGHNESS) * ATTACK_RESISTANCE_SCALE_2_SPEZIALISED_FOR_TOUGHNESS) + ATTACK_RESISTANCE_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_TOUGHNESS;

    public static float[] STM_RESIS_SCALES_SPEZIALISED_FORTOUGHNESS = { ATTACK_RESISTANCE_SCALE_1_SPEZIALISED_FOR_TOUGHNESS, ATTACK_RESISTANCE_SCALE_2_SPEZIALISED_FOR_TOUGHNESS, ATTACK_RESISTANCE_SCALE_3_SPEZIALISED_FOR_TOUGHNESS };
    public static int[] STM_RESIS_BASESTATS_SPEZIALISED_FORTOUGHNESS = { ATTACK_RESISTANCE_STARTVALUE_SPEZIALISED_FOR_TOUGHNESS, ATTACK_RESISTANCE_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_TOUGHNESS, ATTACK_RESISTANCE_MAX_VALUE_AFTER_SOFTCAP_2_HP_SPEZIALISED_FOR_TOUGHNESS };

    //-----------ATTACK_RESISTANCE_FOR_STRENGTH-----------ATTACK_RESISTANCE_FOR_STRENGTH-----------ATTACK_RESISTANCE_FOR_STRENGTH-----------ATTACK_RESISTANCE_FOR_STRENGTH-----------ATTACK_RESISTANCE-----------ATTACK_RESISTANCE-----------ATTACK_RESISTANCE-----------STAIMNA_REGENERATION---------------


    public static int ATTACK_RESISTANCE_SOFTCAP_NOT_SPEZIALISED_1_FOR_STRENGTH = 10;
    public static int ATTACK_RESISTANCE_SOFTCAP_NOT_SPEZIALISED_2_FOR_STRENGTH = 25;
    public static float ATTACK_RESISTANCE_SCALE_1_NOT_SPEZIALISED_FOR_STRENGTH = 0.025f;
    public static float ATTACK_RESISTANCE_SCALE_2_NOT_SPEZIALISED_FOR_STRENGTH = 0.05f;
    public static float ATTACK_RESISTANCE_SCALE_3_NOT_SPEZIALISED_FOR_STRENGTH = 0.025f;
    public static float ATTACK_RESISTANCE_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_STRENGTH = ATTACK_RESISTANCE_SOFTCAP_NOT_SPEZIALISED_1_FOR_STRENGTH * ATTACK_RESISTANCE_SCALE_1_NOT_SPEZIALISED_FOR_STRENGTH;
    public static float ATTACK_RESISTANCE_MAX_VALUE_AFTER_SOFTCAP_2_HP_SPEZIALISED_FOR_STRENGTH = (ATTACK_RESISTANCE_SOFTCAP_NOT_SPEZIALISED_2_FOR_STRENGTH - ATTACK_RESISTANCE_SOFTCAP_NOT_SPEZIALISED_1_FOR_STRENGTH) * ATTACK_RESISTANCE_SCALE_2_NOT_SPEZIALISED_FOR_STRENGTH + ATTACK_RESISTANCE_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_STRENGTH;

    public static float[] STM_RESIS_SCALES_NOT_SPEZIALISED_FOR_STREMGTH = { ATTACK_RESISTANCE_SCALE_1_NOT_SPEZIALISED_FOR_STRENGTH, ATTACK_RESISTANCE_SCALE_2_NOT_SPEZIALISED_FOR_STRENGTH };
    public static float[] STM_RESIS_BASES_NOT_SPEZIALISED_FOR_STREMGTH = { 0, ATTACK_RESISTANCE_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_STRENGTH, ATTACK_RESISTANCE_MAX_VALUE_AFTER_SOFTCAP_2_HP_SPEZIALISED_FOR_STRENGTH };

    public static int ATTACK_RESISTANCE_SOFTCAP_SPEZIALISED_1_FOR_STRENGTH = 10;
    public static int ATTACK_RESISTANCE_SOFTCAP_SPEZIALISED_2_FOR_STRENGTH = 20;
    public static float ATTACK_RESISTANCE_SCALE_1_SPEZIALISED_FOR_STRENGTH = 0f;
    public static float ATTACK_RESISTANCE_SCALE_2_SPEZIALISED_FOR_STRENGTH = .05f;
    public static float ATTACK_RESISTANCE_SCALE_3_SPEZIALISED_FOR_STRENGTH = 0.1f;
    public static float ATTACK_RESISTANCE_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_STRENGTH = ATTACK_RESISTANCE_SOFTCAP_SPEZIALISED_1_FOR_STRENGTH * ATTACK_RESISTANCE_SCALE_1_SPEZIALISED_FOR_STRENGTH;
    public static float ATTACK_RESISTANCE_MAX_VALUE_AFTER_SOFTCAP_2_SPEZIALISED_FOR_STRENGTH = (ATTACK_RESISTANCE_SOFTCAP_SPEZIALISED_2_FOR_STRENGTH - ATTACK_RESISTANCE_SOFTCAP_SPEZIALISED_1_FOR_STRENGTH) + ATTACK_RESISTANCE_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_STRENGTH;

    public static float[] STM_RESIS_SCALES_SPEZIALISED_FOR_STREMGTH = { ATTACK_RESISTANCE_SCALE_1_SPEZIALISED_FOR_STRENGTH, ATTACK_RESISTANCE_SCALE_2_SPEZIALISED_FOR_STRENGTH, ATTACK_RESISTANCE_SCALE_3_SPEZIALISED_FOR_STRENGTH };
    public static float[] STM_RESIS_BASES_SPEZIALISED_FOR_STREMGTH = { 0, ATTACK_RESISTANCE_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_STRENGTH, ATTACK_RESISTANCE_MAX_VALUE_AFTER_SOFTCAP_2_SPEZIALISED_FOR_STRENGTH };

    //-----------DEFENCE-----------DEFENCE-----------DEFENCE-----------DEFENCE-----------DEFENCE-----------DEFENCE-----------DEFENCE-----------DEFENCE---------------

    public static int DEFENCE_STARTVALUE_NOT_SPEZIALISED = 17;
    public static int DEFENCE_STARTVALUE_SPEZIALISED = 19;

    //-----------DEFENCE_FOR_TOUGHNESS-----------DEFENCE_FOR_TOUGHNESS-----------DEFENCE_FOR_TOUGHNESS-----------DEFENCE_FOR_TOUGHNESS-----------DEFENCE_FOR_TOUGHNESS-----------DEFENCE_FOR_TOUGHNESS-----------DEFENCE_FOR_TOUGHNESS-----------DEFENCE_FOR_TOUGHNESS---------------

    public static int DEFENCE_SOFTCAP_NOT_SPEZIALISED_1_FOR_TOUGHNESS = 10;
    public static int DEFENCE_SOFTCAP_NOT_SPEZIALISED_2_FOR_TOUGHNESS = 25;
    public static int DEFENCE_SCALE_1_NOT_SPEZIALISED_FOR_TOUGHNESS = 3;
    public static int DEFENCE_SCALE_2_NOT_SPEZIALISED_FOR_TOUGHNESS = 2;
    public static int DEFENCE_SCALE_3_NOT_SPEZIALISED_FOR_TOUGHNESS = 1;
    public static int DEFENCE_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_TOUGHNESS = (DEFENCE_SOFTCAP_NOT_SPEZIALISED_1_FOR_TOUGHNESS * DEFENCE_SCALE_1_NOT_SPEZIALISED_FOR_TOUGHNESS) + DEFENCE_STARTVALUE_NOT_SPEZIALISED;
    public static int DEFENCE_MAX_VALUE_AFTER_SOFTCAP_2_NOT_SPEZIALISED_FOR_TOUGHNESS = ((DEFENCE_SOFTCAP_NOT_SPEZIALISED_2_FOR_TOUGHNESS - DEFENCE_SOFTCAP_NOT_SPEZIALISED_1_FOR_TOUGHNESS) * DEFENCE_SCALE_2_NOT_SPEZIALISED_FOR_TOUGHNESS) + DEFENCE_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_TOUGHNESS;

    public static int[] DEFENCE_SCALES_NOT_SPEZIALISED_FOR_TOUGHNESS = { DEFENCE_SCALE_1_NOT_SPEZIALISED_FOR_TOUGHNESS, DEFENCE_SCALE_2_NOT_SPEZIALISED_FOR_TOUGHNESS, DEFENCE_SCALE_3_NOT_SPEZIALISED_FOR_TOUGHNESS };
    public static int[] DEFENCE_BASES_NOT_SPEZIALISED_FOR_TOUGHNESS = { DEFENCE_STARTVALUE_NOT_SPEZIALISED, DEFENCE_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_TOUGHNESS, DEFENCE_MAX_VALUE_AFTER_SOFTCAP_2_NOT_SPEZIALISED_FOR_TOUGHNESS };

    public static int DEFENCE_SOFTCAP_SPEZIALISED_1_FOR_TOUGHNESS = 15;
    public static int DEFENCE_SOFTCAP_SPEZIALISED_2_FOR_TOUGHNESS = 50;
    public static int DEFENCE_SCALE_1_SPEZIALISED_FOR_TOUGHNESS = 1;
    public static int DEFENCE_SCALE_2_SPEZIALISED_FOR_TOUGHNESS = 3;
    public static int DEFENCE_SCALE_3_SPEZIALISED_FOR_TOUGHNESS = 2;
    public static int DEFENCE_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_TOUGHNESS = (DEFENCE_SOFTCAP_SPEZIALISED_1_FOR_TOUGHNESS * DEFENCE_SCALE_1_SPEZIALISED_FOR_TOUGHNESS) + DEFENCE_STARTVALUE_SPEZIALISED;
    public static int DEFENCE_MAX_VALUE_AFTER_SOFTCAP_2_HP_SPEZIALISED_FOR_TOUGHNESS = ((DEFENCE_SOFTCAP_SPEZIALISED_2_FOR_TOUGHNESS - DEFENCE_SOFTCAP_SPEZIALISED_1_FOR_TOUGHNESS) * DEFENCE_SCALE_2_SPEZIALISED_FOR_TOUGHNESS) + DEFENCE_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_TOUGHNESS;

    public static int[] DEFENCE_SCALES_SPEZIALISED_FOR_TOUGHNESS = { DEFENCE_SCALE_1_SPEZIALISED_FOR_TOUGHNESS, DEFENCE_SCALE_2_SPEZIALISED_FOR_TOUGHNESS, DEFENCE_SCALE_3_SPEZIALISED_FOR_TOUGHNESS };
    public static int[] DEFENCE_BASES_SPEZIALISED_FOR_TOUGHNESS = { DEFENCE_STARTVALUE_SPEZIALISED, DEFENCE_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_TOUGHNESS, DEFENCE_MAX_VALUE_AFTER_SOFTCAP_2_HP_SPEZIALISED_FOR_TOUGHNESS };

    //-----------DEFENCE_FOR_STRENGTH-----------DEFENCE_FOR_STRENGTH-----------DEFENCE_FOR_STRENGTH-----------DEFENCE_FOR_STRENGTH-----------DEFENCE_FOR_STRENGTH-----------DEFENCE_FOR_STRENGTH-----------DEFENCE_FOR_STRENGTH-----------DEFENCE_FOR_STRENGTH---------------

    public static int DEFENCE_SOFTCAP_NOT_SPEZIALISED_1_FOR_STRENGTH = 10;
    public static int DEFENCE_SOFTCAP_NOT_SPEZIALISED_2_FOR_STRENGTH = 25;
    public static int DEFENCE_SCALE_1_NOT_SPEZIALISED_FOR_STRENGTH = 3;
    public static int DEFENCE_SCALE_2_NOT_SPEZIALISED_FOR_STRENGTH = 2;
    public static int DEFENCE_SCALE_3_NOT_SPEZIALISED_FOR_STRENGTH = 1;
    public static int DEFENCE_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_STRENGTH = (DEFENCE_SOFTCAP_NOT_SPEZIALISED_1_FOR_STRENGTH * DEFENCE_SCALE_1_NOT_SPEZIALISED_FOR_STRENGTH) + DEFENCE_STARTVALUE_NOT_SPEZIALISED;
    public static int DEFENCE_MAX_VALUE_AFTER_SOFTCAP_2_NOT_SPEZIALISED_FOR_STRENGTH = ((DEFENCE_SOFTCAP_NOT_SPEZIALISED_2_FOR_STRENGTH - DEFENCE_SOFTCAP_NOT_SPEZIALISED_1_FOR_STRENGTH) * DEFENCE_SCALE_2_NOT_SPEZIALISED_FOR_STRENGTH) + DEFENCE_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_STRENGTH;

    public static int[] DEFENCE_SCALES_NOT_SPEZIALISED_FOR_STRENGTH = { DEFENCE_SCALE_1_NOT_SPEZIALISED_FOR_STRENGTH, DEFENCE_SCALE_2_NOT_SPEZIALISED_FOR_STRENGTH, DEFENCE_SCALE_3_NOT_SPEZIALISED_FOR_STRENGTH };
    public static int[] DEFENCE_BASES_NOT_SPEZIALISED_FOR_STRENGTH = { 0, DEFENCE_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_STRENGTH, DEFENCE_MAX_VALUE_AFTER_SOFTCAP_2_NOT_SPEZIALISED_FOR_STRENGTH };

    public static int DEFENCE_SOFTCAP_SPEZIALISED_1_FOR_STRENGTH = 15;
    public static int DEFENCE_SOFTCAP_SPEZIALISED_2_FOR_STRENGTH = 50;
    public static int DEFENCE_SCALE_1_SPEZIALISED_FOR_STRENGTH = 1;
    public static int DEFENCE_SCALE_2_SPEZIALISED_FOR_STRENGTH = 3;
    public static int DEFENCE_SCALE_3_SPEZIALISED_FOR_STRENGTH = 2;
    public static int DEFENCE_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_STRENGTH = (DEFENCE_SOFTCAP_SPEZIALISED_1_FOR_STRENGTH * DEFENCE_SCALE_1_SPEZIALISED_FOR_STRENGTH) + DEFENCE_STARTVALUE_SPEZIALISED;
    public static int DEFENCE_MAX_VALUE_AFTER_SOFTCAP_2_HP_SPEZIALISED_FOR_STRENGTH = ((DEFENCE_SOFTCAP_SPEZIALISED_2_FOR_STRENGTH - DEFENCE_SOFTCAP_SPEZIALISED_1_FOR_STRENGTH) * DEFENCE_SCALE_2_SPEZIALISED_FOR_STRENGTH) + DEFENCE_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_STRENGTH;

    public static int[] DEFENCE_SCALES_SPEZIALISED_FOR_STRENGTH = { DEFENCE_SCALE_1_SPEZIALISED_FOR_STRENGTH, DEFENCE_SCALE_2_SPEZIALISED_FOR_STRENGTH, DEFENCE_SCALE_3_SPEZIALISED_FOR_STRENGTH };
    public static int[] DEFENCE_BASES_SPEZIALISED_FOR_STRENGTH = { 0, DEFENCE_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_STRENGTH, DEFENCE_MAX_VALUE_AFTER_SOFTCAP_2_HP_SPEZIALISED_FOR_STRENGTH };

    //-----------MAGIC_DEFENCE-----------MAGIC_DEFENCE-----------MAGIC_DEFENCE-----------MAGIC_DEFENCE-----------MAGIC_DEFENCE-----------MAGIC_DEFENCE-----------MAGIC_DEFENCE-----------MAGIC_DEFENCE---------------

    public static int MAGIC_DEFENCE_STARTVALUE_NOT_SPEZIALISED = 17;
    public static int MAGIC_DEFENCE_SOFTCAP_NOT_SPEZIALISED_1 = 10;
    public static int MAGIC_DEFENCE_SOFTCAP_NOT_SPEZIALISED_2 = 25;
    public static int MAGIC_DEFENCE_SCALE_1_NOT_SPEZIALISED = 3;
    public static int MAGIC_DEFENCE_SCALE_2_NOT_SPEZIALISED = 2;
    public static int MAGIC_DEFENCE_SCALE_3_NOT_SPEZIALISED = 1;
    public static int MAGIC_DEFENCE_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED = (MAGIC_DEFENCE_SOFTCAP_NOT_SPEZIALISED_1 * MAGIC_DEFENCE_SCALE_1_NOT_SPEZIALISED) + MAGIC_DEFENCE_STARTVALUE_NOT_SPEZIALISED;
    public static int MAGIC_DEFENCE_MAX_VALUE_AFTER_SOFTCAP_2_NOT_SPEZIALISED = ((MAGIC_DEFENCE_SOFTCAP_NOT_SPEZIALISED_2 - MAGIC_DEFENCE_SOFTCAP_NOT_SPEZIALISED_1) * MAGIC_DEFENCE_SCALE_2_NOT_SPEZIALISED) + MAGIC_DEFENCE_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED;

    public static int MAGIC_DEFENCE_STARTVALUE_SPEZIALISED = 19;
    public static int MAGIC_DEFENCE_SOFTCAP_SPEZIALISED_1 = 15;
    public static int MAGIC_DEFENCE_SOFTCAP_SPEZIALISED_2 = 50;
    public static int MAGIC_DEFENCE_SCALE_1_SPEZIALISED = 1;
    public static int MAGIC_DEFENCE_SCALE_2_SPEZIALISED = 3;
    public static int MAGIC_DEFENCE_SCALE_3_SPEZIALISED = 2;
    public static int MAGIC_DEFENCE_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED = (MAGIC_DEFENCE_SOFTCAP_SPEZIALISED_1 * MAGIC_DEFENCE_SCALE_1_SPEZIALISED) + MAGIC_DEFENCE_STARTVALUE_SPEZIALISED;
    public static int MAGIC_DEFENCE_MAX_VALUE_AFTER_SOFTCAP_2_HP_SPEZIALISED = ((MAGIC_DEFENCE_SOFTCAP_SPEZIALISED_2 - MAGIC_DEFENCE_SOFTCAP_SPEZIALISED_1) * MAGIC_DEFENCE_SCALE_2_SPEZIALISED) + MAGIC_DEFENCE_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED;

    //-----------ATTACK-----------ATTACK-----------ATTACK-----------ATTACK-----------ATTACK-----------ATTACK-----------ATTACK-----------ATTACK---------------
    public static int ATTACK_STARTVALUE_NOT_SPEZIALISED = 17;
    public static int ATTACK_STARTVALUE_SPEZIALISED = 19;


    //-----------ATTACK_FOR_STRENGHT-----------ATTACK_FOR_STRENGHT-----------ATTACK_FOR_STRENGHT-----------ATTACK_FOR_STRENGHT-----------ATTACK_FOR_STRENGHT-----------ATTACK_FOR_STRENGHT-----------ATTACK_FOR_STRENGHT-----------ATTACK_FOR_STRENGHT---------------

    public static int ATTACK_SOFTCAP_NOT_SPEZIALISED_1_FOR_STRENGHT = 10;
    public static int ATTACK_SOFTCAP_NOT_SPEZIALISED_2_FOR_STRENGHT = 25;
    public static int ATTACK_SCALE_1_NOT_SPEZIALISED_FOR_STRENGHT = 3;
    public static int ATTACK_SCALE_2_NOT_SPEZIALISED_FOR_STRENGHT = 2;
    public static int ATTACK_SCALE_3_NOT_SPEZIALISED_FOR_STRENGHT = 1;
    public static int ATTACK_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_STRENGHT = (ATTACK_SOFTCAP_NOT_SPEZIALISED_1_FOR_STRENGHT * ATTACK_SCALE_1_NOT_SPEZIALISED_FOR_STRENGHT) + ATTACK_STARTVALUE_NOT_SPEZIALISED;
    public static int ATTACK_MAX_VALUE_AFTER_SOFTCAP_2_NOT_SPEZIALISED_FOR_STRENGHT = ((ATTACK_SOFTCAP_NOT_SPEZIALISED_2_FOR_STRENGHT - ATTACK_SOFTCAP_NOT_SPEZIALISED_1_FOR_STRENGHT) * ATTACK_SCALE_2_NOT_SPEZIALISED_FOR_STRENGHT) + ATTACK_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_STRENGHT;

    public static int[] ATTACK_SCALES_NOT_SPEZIALISED_FOR_STRENGHT = { ATTACK_SCALE_1_NOT_SPEZIALISED_FOR_STRENGHT, ATTACK_SCALE_2_NOT_SPEZIALISED_FOR_STRENGHT, ATTACK_SCALE_3_NOT_SPEZIALISED_FOR_STRENGHT };
    public static int[] ATTACK_BASESTATS_NOT_SPEZIALISED_FOR_STRENGHT = { ATTACK_STARTVALUE_NOT_SPEZIALISED, ATTACK_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_STRENGHT, ATTACK_MAX_VALUE_AFTER_SOFTCAP_2_NOT_SPEZIALISED_FOR_STRENGHT };

    public static int ATTACK_SOFTCAP_SPEZIALISED_1_FOR_STRENGHT = 15;
    public static int ATTACK_SOFTCAP_SPEZIALISED_2_FOR_STRENGHT = 50;
    public static int ATTACK_SCALE_1_SPEZIALISED_FOR_STRENGHT = 1;
    public static int ATTACK_SCALE_2_SPEZIALISED_FOR_STRENGHT = 3;
    public static int ATTACK_SCALE_3_SPEZIALISED_FOR_STRENGHT = 2;
    public static int ATTACK_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_STRENGHT = (ATTACK_SOFTCAP_SPEZIALISED_1_FOR_STRENGHT * ATTACK_SCALE_1_SPEZIALISED_FOR_STRENGHT) + ATTACK_STARTVALUE_SPEZIALISED;
    public static int ATTACK_MAX_VALUE_AFTER_SOFTCAP_2_HP_SPEZIALISED_FOR_STRENGHT = ((ATTACK_SOFTCAP_SPEZIALISED_2_FOR_STRENGHT - ATTACK_SOFTCAP_SPEZIALISED_1_FOR_STRENGHT) * ATTACK_SCALE_2_SPEZIALISED_FOR_STRENGHT) + ATTACK_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_STRENGHT;

    public static int[] ATTACK_SCALES_SPEZIALISED_FOR_STRENGHT = { ATTACK_SCALE_1_SPEZIALISED_FOR_STRENGHT, ATTACK_SCALE_2_SPEZIALISED_FOR_STRENGHT, ATTACK_SCALE_3_SPEZIALISED_FOR_STRENGHT };
    public static int[] ATTACK_BASESTATS_SPEZIALISED_FOR_STRENGHT = { ATTACK_STARTVALUE_SPEZIALISED, ATTACK_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_STRENGHT, ATTACK_MAX_VALUE_AFTER_SOFTCAP_2_HP_SPEZIALISED_FOR_STRENGHT };

    //-----------ATTACK_FOR_SPEED-----------ATTACK_FOR_SPEED-----------ATTACK_FOR_SPEED-----------ATTACK_FOR_SPEED-----------ATTACK_FOR_SPEED-----------ATTACK_FOR_SPEED-----------ATTACK_FOR_SPEED-----------ATTACK_FOR_SPEED---------------

    public static int ATTACK_SOFTCAP_NOT_SPEZIALISED_1_FOR_SPEED = 200;
    public static int ATTACK_SOFTCAP_NOT_SPEZIALISED_2_FOR_SPEED = 300;
    public static float ATTACK_SCALE_1_NOT_SPEZIALISED_FOR_SPEED = 0.5f;
    public static float ATTACK_SCALE_2_NOT_SPEZIALISED_FOR_SPEED = 0.2f;
    public static float ATTACK_SCALE_3_NOT_SPEZIALISED_FOR_SPEED = 0.1f;
    public static int ATTACK_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_SPEED = Math.round(ATTACK_SOFTCAP_NOT_SPEZIALISED_1_FOR_SPEED * ATTACK_SCALE_1_NOT_SPEZIALISED_FOR_SPEED);
    public static int ATTACK_MAX_VALUE_AFTER_SOFTCAP_2_NOT_SPEZIALISED_FOR_SPEED = Math.round((ATTACK_SOFTCAP_NOT_SPEZIALISED_2_FOR_SPEED - ATTACK_SOFTCAP_NOT_SPEZIALISED_1_FOR_SPEED) * ATTACK_SCALE_2_NOT_SPEZIALISED_FOR_SPEED) + ATTACK_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_SPEED;

    public static float[] ATTACK_SCALES_NOT_SPEZIALISED_FOR_SPEED = { ATTACK_SCALE_1_NOT_SPEZIALISED_FOR_SPEED, ATTACK_SCALE_2_NOT_SPEZIALISED_FOR_SPEED, ATTACK_SCALE_3_NOT_SPEZIALISED_FOR_SPEED };
    public static int[] ATTACK_BASES_NOT_SPEZIALISED_FOR_SPEED = {0, ATTACK_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_SPEED, ATTACK_MAX_VALUE_AFTER_SOFTCAP_2_NOT_SPEZIALISED_FOR_SPEED };

    public static int ATTACK_SOFTCAP_SPEZIALISED_1_FOR_SPEED = 150;
    public static int ATTACK_SOFTCAP_SPEZIALISED_2_FOR_SPEED = 500;
    public static float ATTACK_SCALE_1_SPEZIALISED_FOR_SPEED = 0.1f;
    public static float ATTACK_SCALE_2_SPEZIALISED_FOR_SPEED = 0.75f;
    public static float ATTACK_SCALE_3_SPEZIALISED_FOR_SPEED = 0.4f;
    public static int ATTACK_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_SPEED = Math.round(ATTACK_SOFTCAP_SPEZIALISED_1_FOR_SPEED * ATTACK_SCALE_1_SPEZIALISED_FOR_SPEED) + ATTACK_STARTVALUE_SPEZIALISED;
    public static int ATTACK_MAX_VALUE_AFTER_SOFTCAP_2_HP_SPEZIALISED_FOR_SPEED = Math.round((ATTACK_SOFTCAP_SPEZIALISED_2_FOR_SPEED - ATTACK_SOFTCAP_SPEZIALISED_1_FOR_SPEED) * ATTACK_SCALE_2_SPEZIALISED_FOR_SPEED) + ATTACK_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_SPEED;

    public static float[] ATTACK_SCALES_SPEZIALISED_FOR_SPEED = { ATTACK_SCALE_1_SPEZIALISED_FOR_SPEED, ATTACK_SCALE_2_SPEZIALISED_FOR_SPEED, ATTACK_SCALE_3_SPEZIALISED_FOR_SPEED };
    public static int[] ATTACK_BASES_SPEZIALISED_FOR_SPEED = { 0, ATTACK_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_SPEED, ATTACK_MAX_VALUE_AFTER_SOFTCAP_2_NOT_SPEZIALISED_FOR_SPEED };

    //-----------MAGIC_ATTACK-----------MAGIC_ATTACK-----------MAGIC_ATTACK-----------MAGIC_ATTACK-----------MAGIC_ATTACK-----------MAGIC_ATTACK-----------MAGIC_ATTACK-----------MAGIC_ATTACK---------------

    public static int MAGIC_ATTACK_STARTVALUE_NOT_SPEZIALISED = 17;
    public static int MAGIC_ATTACK_STARTVALUE_SPEZIALISED = 19;

    //-----------MAGIC_ATTACK_FOR_MAGIC-----------MAGIC_ATTACK_FOR_MAGIC-----------MAGIC_ATTACK_FOR_MAGIC-----------MAGIC_ATTACK_FOR_MAGIC-----------MAGIC_ATTACK_FOR_MAGIC-----------MAGIC_ATTACK_FOR_MAGIC-----------MAGIC_ATTACK_FOR_MAGIC-----------MAGIC_ATTACK_FOR_MAGIC---------------

    public static int MAGIC_ATTACK_SOFTCAP_NOT_SPEZIALISED_1_FOR_MAGIC = 10;
    public static int MAGIC_ATTACK_SOFTCAP_NOT_SPEZIALISED_2_FOR_MAGIC = 25;
    public static int MAGIC_ATTACK_SCALE_1_NOT_SPEZIALISED_FOR_MAGIC = 3;
    public static int MAGIC_ATTACK_SCALE_2_NOT_SPEZIALISED_FOR_MAGIC = 2;
    public static int MAGIC_ATTACK_SCALE_3_NOT_SPEZIALISED_FOR_MAGIC = 1;
    public static int MAGIC_ATTACK_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_MAGIC = (MAGIC_ATTACK_SOFTCAP_NOT_SPEZIALISED_1_FOR_MAGIC * MAGIC_ATTACK_SCALE_1_NOT_SPEZIALISED_FOR_MAGIC) + MAGIC_ATTACK_STARTVALUE_NOT_SPEZIALISED;
    public static int MAGIC_ATTACK_MAX_VALUE_AFTER_SOFTCAP_2_NOT_SPEZIALISED_FOR_MAGIC = ((MAGIC_ATTACK_SOFTCAP_NOT_SPEZIALISED_2_FOR_MAGIC - MAGIC_ATTACK_SOFTCAP_NOT_SPEZIALISED_1_FOR_MAGIC) * MAGIC_ATTACK_SCALE_2_NOT_SPEZIALISED_FOR_MAGIC) + MAGIC_ATTACK_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_MAGIC;

    public static int[] MAGIC_ATTACK_SCALES_NOT_SPEZIALISED_FOR_MAGIC = { MAGIC_ATTACK_SCALE_1_NOT_SPEZIALISED_FOR_MAGIC, MAGIC_ATTACK_SCALE_2_NOT_SPEZIALISED_FOR_MAGIC, MAGIC_ATTACK_SCALE_3_NOT_SPEZIALISED_FOR_MAGIC };
    public static int[] MAGIC_ATTACK_BASES_NOT_SPEZIALISED_FOR_MAGIC = { MAGIC_ATTACK_STARTVALUE_NOT_SPEZIALISED, MAGIC_ATTACK_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_MAGIC, MAGIC_ATTACK_MAX_VALUE_AFTER_SOFTCAP_2_NOT_SPEZIALISED_FOR_MAGIC };

    public static int MAGIC_ATTACK_SOFTCAP_SPEZIALISED_1_FOR_MAGIC = 15;
    public static int MAGIC_ATTACK_SOFTCAP_SPEZIALISED_2_FOR_MAGIC = 50;
    public static int MAGIC_ATTACK_SCALE_1_SPEZIALISED_FOR_MAGIC = 1;
    public static int MAGIC_ATTACK_SCALE_2_SPEZIALISED_FOR_MAGIC = 3;
    public static int MAGIC_ATTACK_SCALE_3_SPEZIALISED_FOR_MAGIC = 2;
    public static int MAGIC_ATTACK_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_MAGIC = (MAGIC_ATTACK_SOFTCAP_SPEZIALISED_1_FOR_MAGIC * MAGIC_ATTACK_SCALE_1_SPEZIALISED_FOR_MAGIC) + MAGIC_ATTACK_STARTVALUE_SPEZIALISED;
    public static int MAGIC_ATTACK_MAX_VALUE_AFTER_SOFTCAP_2_HP_SPEZIALISED_FOR_MAGIC = ((MAGIC_ATTACK_SOFTCAP_SPEZIALISED_2_FOR_MAGIC - MAGIC_ATTACK_SOFTCAP_SPEZIALISED_1_FOR_MAGIC) * MAGIC_ATTACK_SCALE_2_SPEZIALISED_FOR_MAGIC) + MAGIC_ATTACK_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_MAGIC;

    public static int[] MAGIC_ATTACK_SCALES_SPEZIALISED_FOR_MAGIC = { MAGIC_ATTACK_SCALE_1_SPEZIALISED_FOR_MAGIC, MAGIC_ATTACK_SCALE_2_SPEZIALISED_FOR_MAGIC, MAGIC_ATTACK_SCALE_3_SPEZIALISED_FOR_MAGIC };
    public static int[] MAGIC_ATTACK_BASES_SPEZIALISED_FOR_MAGIC = { MAGIC_ATTACK_STARTVALUE_SPEZIALISED, MAGIC_ATTACK_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_MAGIC, MAGIC_ATTACK_MAX_VALUE_AFTER_SOFTCAP_2_HP_SPEZIALISED_FOR_MAGIC };

    //-----------MAGIC_ATTACK_FOR_INTELLIGENCE-----------MAGIC_ATTACK_FOR_INTELLIGENCE-----------MAGIC_ATTACK_FOR_INTELLIGENCE-----------MAGIC_ATTACK_FOR_INTELLIGENCE-----------MAGIC_ATTACK_FOR_INTELLIGENCE-----------MAGIC_ATTACK_FOR_INTELLIGENCE-----------MAGIC_ATTACK_FOR_INTELLIGENCE-----------MAGIC_ATTACK_FOR_INTELLIGENCE---------------

    public static int MAGIC_ATTACK_SOFTCAP_NOT_SPEZIALISED_1_FOR_INTELLIGENCE = 10;
    public static int MAGIC_ATTACK_SOFTCAP_NOT_SPEZIALISED_2_FOR_INTELLIGENCE = 25;
    public static int MAGIC_ATTACK_SCALE_1_NOT_SPEZIALISED_FOR_INTELLIGENCE = 3;
    public static int MAGIC_ATTACK_SCALE_2_NOT_SPEZIALISED_FOR_INTELLIGENCE = 2;
    public static int MAGIC_ATTACK_SCALE_3_NOT_SPEZIALISED_FOR_INTELLIGENCE = 1;
    public static int MAGIC_ATTACK_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_INTELLIGENCE = (MAGIC_ATTACK_SOFTCAP_NOT_SPEZIALISED_1_FOR_INTELLIGENCE * MAGIC_ATTACK_SCALE_1_NOT_SPEZIALISED_FOR_INTELLIGENCE);
    public static int MAGIC_ATTACK_MAX_VALUE_AFTER_SOFTCAP_2_NOT_SPEZIALISED_FOR_INTELLIGENCE = ((MAGIC_ATTACK_SOFTCAP_NOT_SPEZIALISED_2_FOR_INTELLIGENCE - MAGIC_ATTACK_SOFTCAP_NOT_SPEZIALISED_1_FOR_INTELLIGENCE) * MAGIC_ATTACK_SCALE_2_NOT_SPEZIALISED_FOR_INTELLIGENCE) + MAGIC_ATTACK_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_INTELLIGENCE;

    public static int[] MAGIC_ATTACK_SCALES_NOT_SPEZIALISED_FOR_INTELLIGENCE = { MAGIC_ATTACK_SCALE_1_NOT_SPEZIALISED_FOR_INTELLIGENCE, MAGIC_ATTACK_SCALE_2_NOT_SPEZIALISED_FOR_INTELLIGENCE, MAGIC_ATTACK_SCALE_3_NOT_SPEZIALISED_FOR_INTELLIGENCE };
    public static int[] MAGIC_ATTACK_BASES_NOT_SPEZIALISED_FOR_INTELLIGENCE = { 0, MAGIC_ATTACK_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_INTELLIGENCE, MAGIC_ATTACK_MAX_VALUE_AFTER_SOFTCAP_2_NOT_SPEZIALISED_FOR_INTELLIGENCE };

    public static int MAGIC_ATTACK_SOFTCAP_SPEZIALISED_1_FOR_INTELLIGENCE = 15;
    public static int MAGIC_ATTACK_SOFTCAP_SPEZIALISED_2_FOR_INTELLIGENCE = 50;
    public static int MAGIC_ATTACK_SCALE_1_SPEZIALISED_FOR_INTELLIGENCE = 1;
    public static int MAGIC_ATTACK_SCALE_2_SPEZIALISED_FOR_INTELLIGENCE = 3;
    public static int MAGIC_ATTACK_SCALE_3_SPEZIALISED_FOR_INTELLIGENCE = 2;
    public static int MAGIC_ATTACK_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_INTELLIGENCE = (MAGIC_ATTACK_SOFTCAP_SPEZIALISED_1_FOR_INTELLIGENCE * MAGIC_ATTACK_SCALE_1_SPEZIALISED_FOR_INTELLIGENCE);
    public static int MAGIC_ATTACK_MAX_VALUE_AFTER_SOFTCAP_2_HP_SPEZIALISED_FOR_INTELLIGENCE = ((MAGIC_ATTACK_SOFTCAP_SPEZIALISED_2_FOR_INTELLIGENCE - MAGIC_ATTACK_SOFTCAP_SPEZIALISED_1_FOR_INTELLIGENCE) * MAGIC_ATTACK_SCALE_2_SPEZIALISED_FOR_INTELLIGENCE) + MAGIC_ATTACK_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_INTELLIGENCE;

    public static int[] MAGIC_ATTACK_SCALES_SPEZIALISED_FOR_INTELLIGENCE = { MAGIC_ATTACK_SCALE_1_SPEZIALISED_FOR_INTELLIGENCE, MAGIC_ATTACK_SCALE_2_SPEZIALISED_FOR_INTELLIGENCE, MAGIC_ATTACK_SCALE_3_SPEZIALISED_FOR_INTELLIGENCE };
    public static int[] MAGIC_ATTACK_BASES_SPEZIALISED_FOR_INTELLIGENCE = { 0, MAGIC_ATTACK_SCALE_2_SPEZIALISED_FOR_INTELLIGENCE, MAGIC_ATTACK_MAX_VALUE_AFTER_SOFTCAP_2_HP_SPEZIALISED_FOR_INTELLIGENCE };

    //-----------SPEED-----------SPEED-----------SPEED-----------SPEED-----------SPEED-----------SPEED-----------SPEED-----------SPEED---------------

    public static int SPEED_STARTVALUE_NOT_SPEZIALISED = 17;
    public static int SPEED_SOFTCAP_NOT_SPEZIALISED_1 = 10;
    public static int SPEED_SOFTCAP_NOT_SPEZIALISED_2 = 25;
    public static int SPEED_SCALE_1_NOT_SPEZIALISED = 3;
    public static int SPEED_SCALE_2_NOT_SPEZIALISED = 2;
    public static int SPEED_SCALE_3_NOT_SPEZIALISED = 1;
    public static int SPEED_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED = (SPEED_SOFTCAP_NOT_SPEZIALISED_1 * SPEED_SCALE_1_NOT_SPEZIALISED) + SPEED_STARTVALUE_NOT_SPEZIALISED;
    public static int SPEED_MAX_VALUE_AFTER_SOFTCAP_2_NOT_SPEZIALISED = ((SPEED_SOFTCAP_NOT_SPEZIALISED_2 - SPEED_SOFTCAP_NOT_SPEZIALISED_1) * SPEED_SCALE_2_NOT_SPEZIALISED) + SPEED_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED;

    public static int[] SPEED_SCALES_NOT_SPEZIALISED = { SPEED_SCALE_1_NOT_SPEZIALISED, SPEED_SCALE_2_NOT_SPEZIALISED, SPEED_SCALE_3_NOT_SPEZIALISED };
    public static int[] SPEED_BASES_NOT_SPEZIALISED = { SPEED_STARTVALUE_NOT_SPEZIALISED, SPEED_MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED, SPEED_MAX_VALUE_AFTER_SOFTCAP_2_NOT_SPEZIALISED };

    public static int SPEED_STARTVALUE_SPEZIALISED = 19;
    public static int SPEED_SOFTCAP_SPEZIALISED_1 = 15;
    public static int SPEED_SOFTCAP_SPEZIALISED_2 = 50;
    public static int SPEED_SCALE_1_SPEZIALISED = 1;
    public static int SPEED_SCALE_2_SPEZIALISED = 3;
    public static int SPEED_SCALE_3_SPEZIALISED = 2;
    public static int SPEED_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED = (SPEED_SOFTCAP_SPEZIALISED_1 * SPEED_SCALE_1_SPEZIALISED) + SPEED_STARTVALUE_SPEZIALISED;
    public static int SPEED_MAX_VALUE_AFTER_SOFTCAP_2_HP_SPEZIALISED = ((SPEED_SOFTCAP_SPEZIALISED_2 - SPEED_SOFTCAP_SPEZIALISED_1) * SPEED_SCALE_2_SPEZIALISED) + SPEED_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED;

    public static int[] SPEED_SCALES_SPEZIALISED = { SPEED_SCALE_1_SPEZIALISED, SPEED_SCALE_2_SPEZIALISED, SPEED_SCALE_3_SPEZIALISED };
    public static int[] SPEED_BASES_SPEZIALISED = { SPEED_STARTVALUE_SPEZIALISED, SPEED_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED, SPEED_MAX_VALUE_AFTER_SOFTCAP_2_HP_SPEZIALISED };

    //-----------MAX_LOAD-----------MAX_LOAD-----------MAX_LOAD-----------MAX_LOAD-----------MAX_LOAD-----------MAX_LOAD-----------MAX_LOAD-----------MAX_LOAD---------------

    public static int MAX_LOAD_STARTVALUE = 20;

    //-----------MAX_LOAD_FOR_Toughness-----------MAX_LOAD_FOR_Toughness-----------MAX_LOAD_FOR_Toughness-----------MAX_LOAD_FOR_Toughness-----------MAX_LOAD_FOR_Toughness-----------MAX_LOAD_FOR_Toughness-----------ATTACK_RESISTANCE-----------STAIMNA_REGENERATION---------------

    public static int MAX_LOAD__SOFTCAP_NOT_SPEZIALISED_1_FOR_TOUGHNESS = 10;
    public static int MAX_LOAD__SOFTCAP_NOT_SPEZIALISED_2_FOR_TOUGHNESS = 25;
    public static float MAX_LOAD__SCALE_1_NOT_SPEZIALISED_FOR_TOUGHNESS = 1f;
    public static float MAX_LOAD__SCALE_2_NOT_SPEZIALISED_FOR_TOUGHNESS = 0.5f;
    public static float MAX_LOAD__SCALE_3_NOT_SPEZIALISED_FOR_TOUGHNESS = 0.25f;
    public static int MAX_LOAD__MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_TOUGHNESS = Math.round(MAX_LOAD__SOFTCAP_NOT_SPEZIALISED_1_FOR_TOUGHNESS * MAX_LOAD__SCALE_1_NOT_SPEZIALISED_FOR_TOUGHNESS) + MAX_LOAD_STARTVALUE;
    public static int MAX_LOAD__MAX_VALUE_AFTER_SOFTCAP_2_NOT_SPEZIALISED_FOR_TOUGHNESS = Math.round((MAX_LOAD__SOFTCAP_NOT_SPEZIALISED_2_FOR_TOUGHNESS - MAX_LOAD__SOFTCAP_NOT_SPEZIALISED_1_FOR_TOUGHNESS) * MAX_LOAD__SCALE_2_NOT_SPEZIALISED_FOR_TOUGHNESS) + MAX_LOAD__MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_TOUGHNESS;

    public static float[] MAX_LOAD__SCALES_NOT_SPEZIALISED_FORTOUGHNESS = { MAX_LOAD__SCALE_1_NOT_SPEZIALISED_FOR_TOUGHNESS, MAX_LOAD__SCALE_2_NOT_SPEZIALISED_FOR_TOUGHNESS, MAX_LOAD__SCALE_3_NOT_SPEZIALISED_FOR_TOUGHNESS };
    public static float[] MAX_LOAD__BASESTATS_NOT_SPEZIALISED_FORTOUGHNESS = { MAX_LOAD_STARTVALUE, MAX_LOAD__MAX_VALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_TOUGHNESS, MAX_LOAD__MAX_VALUE_AFTER_SOFTCAP_2_NOT_SPEZIALISED_FOR_TOUGHNESS };

    public static int MAX_LOAD_SOFTCAP_SPEZIALISED_1_FOR_TOUGHNESS = 5;
    public static int MAX_LOAD_SOFTCAP_SPEZIALISED_2_FOR_TOUGHNESS = 20;
    public static float MAX_LOAD_SCALE_1_SPEZIALISED_FOR_TOUGHNESS = 0f;
    public static float MAX_LOAD_SCALE_2_SPEZIALISED_FOR_TOUGHNESS = .5f;
    public static float MAX_LOAD_SCALE_3_SPEZIALISED_FOR_TOUGHNESS = 1f;
    public static int MAX_LOAD_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_TOUGHNESS = MAX_LOAD_STARTVALUE;
    public static int MAX_LOAD_MAX_VALUE_AFTER_SOFTCAP_2_HP_SPEZIALISED_FOR_TOUGHNESS = Math.round((MAX_LOAD_SOFTCAP_SPEZIALISED_2_FOR_TOUGHNESS - MAX_LOAD_SOFTCAP_SPEZIALISED_1_FOR_TOUGHNESS) * MAX_LOAD_SCALE_2_SPEZIALISED_FOR_TOUGHNESS) + MAX_LOAD_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_TOUGHNESS;

    public static float[] MAX_LOAD_SCALES_SPEZIALISED_FORTOUGHNESS = { MAX_LOAD_SCALE_1_SPEZIALISED_FOR_TOUGHNESS, MAX_LOAD_SCALE_2_SPEZIALISED_FOR_TOUGHNESS, MAX_LOAD_SCALE_3_SPEZIALISED_FOR_TOUGHNESS };
    public static float[] MAX_LOAD_BASESTATS_SPEZIALISED_FORTOUGHNESS = { MAX_LOAD_STARTVALUE, MAX_LOAD_MAX_VALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_TOUGHNESS, MAX_LOAD_MAX_VALUE_AFTER_SOFTCAP_2_HP_SPEZIALISED_FOR_TOUGHNESS };

    //-----------MAX_LOAD_FOR_STRENGTH-----------MAX_LOAD_FOR_STRENGTH-----------MAX_LOAD_FOR_STRENGTH-----------MAX_LOAD_FOR_STRENGTH-----------MAX_LOAD_FOR_STRENGTH-----------MAX_LOAD_FOR_STRENGTH-----------ATTACK_RESISTANCE-----------STAIMNA_REGENERATION---------------


    public static int MAX_LOAD_SOFTCAP_NOT_SPEZIALISED_1_FOR_STRENGTH = 10;
    public static int MAX_LOAD_SOFTCAP_NOT_SPEZIALISED_2_FOR_STRENGTH = 25;
    public static float MAX_LOAD_SCALE_1_NOT_SPEZIALISED_FOR_STRENGTH = 0.025f;
    public static float MAX_LOAD_SCALE_2_NOT_SPEZIALISED_FOR_STRENGTH = 0.05f;
    public static float MAX_LOAD_SCALE_3_NOT_SPEZIALISED_FOR_STRENGTH = 0.025f;
    public static int MAX_LOAD_MAXVALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_STRENGTH = Math.round(MAX_LOAD_SOFTCAP_NOT_SPEZIALISED_1_FOR_STRENGTH * MAX_LOAD_SCALE_1_NOT_SPEZIALISED_FOR_STRENGTH);
    public static int MAX_LOAD_MAXVALUE_AFTER_SOFTCAP_2_NOT_SPEZIALISED_FOR_STRENGTH = Math.round((MAX_LOAD_SOFTCAP_NOT_SPEZIALISED_2_FOR_STRENGTH - MAX_LOAD_SOFTCAP_NOT_SPEZIALISED_1_FOR_STRENGTH) * MAX_LOAD_SCALE_2_NOT_SPEZIALISED_FOR_STRENGTH) + MAX_LOAD_MAXVALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_STRENGTH;

    public static float[] MAX_LOAD_SCALES_NOT_SPEZIALISED_FOR_STREMGTH = { MAX_LOAD_SCALE_1_NOT_SPEZIALISED_FOR_STRENGTH, MAX_LOAD_SCALE_2_NOT_SPEZIALISED_FOR_STRENGTH, MAX_LOAD_SCALE_3_NOT_SPEZIALISED_FOR_STRENGTH };
    public static int[] MAX_LOAD_BASES_NOT_SPEZIALISED_FOR_STREMGTH = { 0, MAX_LOAD_MAXVALUE_AFTER_SOFTCAP_1_NOT_SPEZIALISED_FOR_STRENGTH , MAX_LOAD_MAXVALUE_AFTER_SOFTCAP_2_NOT_SPEZIALISED_FOR_STRENGTH };

    public static int MAX_LOAD_SOFTCAP_SPEZIALISED_1_FOR_STRENGTH = 10;
    public static int MAX_LOAD_SOFTCAP_SPEZIALISED_2_FOR_STRENGTH = 20;
    public static float MAX_LOAD_SCALE_1_SPEZIALISED_FOR_STRENGTH = 0f;
    public static float MAX_LOAD_SCALE_2_SPEZIALISED_FOR_STRENGTH = .05f;
    public static float MAX_LOAD_SCALE_3_SPEZIALISED_FOR_STRENGTH = 0.1f;
    public static int MAX_LOAD_MAXVALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_STRENGTH = Math.round(MAX_LOAD_SOFTCAP_SPEZIALISED_1_FOR_STRENGTH * MAX_LOAD_SCALE_1_SPEZIALISED_FOR_STRENGTH);
    public static int MAX_LOAD_MAXVALUE_AFTER_SOFTCAP_2_SPEZIALISED_FOR_STRENGTH = Math.round((MAX_LOAD_SOFTCAP_SPEZIALISED_2_FOR_STRENGTH - MAX_LOAD_SOFTCAP_SPEZIALISED_1_FOR_STRENGTH) * MAX_LOAD_SCALE_2_NOT_SPEZIALISED_FOR_STRENGTH) + MAX_LOAD_SOFTCAP_SPEZIALISED_1_FOR_STRENGTH;

    public static float[] MAX_LOAD_SCALES_SPEZIALISED_FOR_STREMGTH = { MAX_LOAD_SCALE_1_SPEZIALISED_FOR_STRENGTH, MAX_LOAD_SCALE_2_SPEZIALISED_FOR_STRENGTH, MAX_LOAD_SCALE_2_SPEZIALISED_FOR_STRENGTH };
    public static int[] MAX_LOAD_BASES_SPEZIALISED_FOR_STREMGTH = { 0, MAX_LOAD_MAXVALUE_AFTER_SOFTCAP_1_SPEZIALISED_FOR_STRENGTH, MAX_LOAD_MAXVALUE_AFTER_SOFTCAP_2_SPEZIALISED_FOR_STRENGTH };


   //-----------WEIGHT_CAPS-----------WEIGHT_CAPS-----------WEIGHT_CAPS-----------WEIGHT_CAPS-----------WEIGHT_CAPS-----------WEIGHT_CAPS-----------WEIGHT_CAPS-----------WEIGHT_CAPS---------------

    public static float WEIGHT_CAP_1 = 0.3f;
    public static float WEIGHT_CAP_2 = 0.65f;
    public static float WEIGHT_CAP_3 = 0.65f;
    public static float WEIGHT_CAP_4 = 1f;

    //-----------TAVEL_ABEL_FIELDS-----------TAVEL_ABEL_FIELDS-----------TAVEL_ABEL_FIELDS-----------TAVEL_ABEL_FIELDS-----------TAVEL_ABEL_FIELDS-----------TAVEL_ABEL_FIELDS-----------TAVEL_ABEL_FIELDS-----------TAVEL_ABEL_FIELDS---------------

    public static int MINIMIN_TRAVELABEL_FIELDS = 1;
    public static int NEEDED_SPEED_TO_TRAVEL_2 = 200;
    public static int NEEDED_SPEED_TO_TRAVEL_3 = 300;
    public static int NEEDED_SPEED_TO_TRAVEL_4 = 400;

    //-----------ATTACK_SLOTS-----------ATTACK_SLOTS-----------ATTACK_SLOTS-----------ATTACK_SLOTS-----------ATTACK_SLOTS-----------ATTACK_SLOTS-----------ATTACK_SLOTS-----------ATTACK_SLOTS---------------

    public static int START_ATTACK_SLOTS = 2;

    public static int MINIMUM_STRENGTH_1 = 15;
    public static int MINIMUM_TOUGHNESS_1 = 15;
    public static int MINIMUM_INTELLIGENCE_1 = 10;
    public static int MINIMUM_INTELLIGENCE_2 = 15;
    public static int MINIMUM_INTELLIGENCE_3 = 25;
    public static int MINIMUM_MAGIC_1 = 20;
}
